//
//  MovieDetailsPresenter.swift
//  MovieApp
//
//  Created by Oguz Tandogan on 31.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation
import UIKit
import MovieAppWebService
import Kingfisher

final class MovieDetailsPresenter {

    // MARK: - Private properties -

    private unowned let view: MovieDetailsViewInterface
    private let formatter: MovieDetailsFormatterInterface
    private let interactor: MovieDetailsInteractorInterface
    private let wireframe: MovieDetailsWireframeInterface
    private let movieId: String?
    
    private let movieDetailsCallback = MovieDetailsCallback()

    
    private var movieDetailsModel: MovieDetailsResponseModel?
    // MARK: - Lifecycle -

    init(view: MovieDetailsViewInterface, formatter: MovieDetailsFormatterInterface, interactor: MovieDetailsInteractorInterface, wireframe: MovieDetailsWireframeInterface, movieId: String?) {
        self.view = view
        self.formatter = formatter
        self.interactor = interactor
        self.wireframe = wireframe
        self.movieId = movieId
    }
}

// MARK: - Extensions -

extension MovieDetailsPresenter: MovieDetailsPresenterInterface {
    
    func getMovieDetails() {
        movieDetailsCallback.commonResult { [weak self] (result) in
            self?.getParsedMovieDetailsResponse(result: result)
            
        }
        interactor.getMovieDetails(callback: movieDetailsCallback, params: MovieDetailsRequestModel(movieId: self.movieId))
    }
    
    func getParsedMovieDetailsResponse(result: Result<MovieDetailsResponseModel, BaseErrorResponse>) {
        switch result {
        case .failure(let error):
            print(error)
            
        case .success(let success):
            print(success)
            handleMovieDetailsResponse(response: success)
        }
    }
    
    func handleMovieDetailsResponse(response: MovieDetailsResponseModel) {
        movieDetailsModel = response
        
        view.setMovieDirectorsLabel(directors: response.director)
        view.setMovieGenreLabel(genre: response.genre)
        view.setMovieNameLabel(title: response.title)
        view.setMoviePoster(moviePosterUrl: response.poster)
    }
}
