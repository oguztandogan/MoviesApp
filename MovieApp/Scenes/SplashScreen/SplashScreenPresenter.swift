//
//  SplashScreenPresenter.swift
//  MovieApp
//
//  Created by Oguz Tandogan on 31.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import UIKit

final class SplashScreenPresenter {

    // MARK: - Private properties -

    private unowned let view: SplashScreenViewInterface
    private let interactor: SplashScreenInteractorInterface
    private let wireframe: SplashScreenWireframeInterface

    // MARK: - Lifecycle -

    init(view: SplashScreenViewInterface, interactor: SplashScreenInteractorInterface, wireframe: SplashScreenWireframeInterface) {
        self.view = view
        self.interactor = interactor
        self.wireframe = wireframe
    }
}

// MARK: - Extensions -

extension SplashScreenPresenter: SplashScreenPresenterInterface {
    
    public func renderScreen() -> String {

        if RemoteConfigFetcher.state == .loaded {
            return "Loading..."
        } else if RemoteConfigFetcher.state == .error {
            return "An error happened"
        } else {
            guard let config = RemoteConfigParameters.splashScreen.value as? ScreenConfig else { return "Error" }
            RemoteConfigFetcher.finishCallback = renderScreen
            return config.label.text
        }
    }
    
    public func navigate() {
        wireframe.navigate(option: .movies)
    }
}
